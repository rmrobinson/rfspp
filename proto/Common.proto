
package rfs;

// Describes the metadata associated with a file system entry
// This has the same format for symlinks, directories and files.
message Metadata {
    
    // The type of file system entry represented by this stat entry.
    enum Type {
        Directory = 1;
        Symlink = 2;
        File = 3;
        KeyValueFile = 4;
        Unknown = 5;
    }
    required Type type = 1 [default = File];
    
    // The possible permission modes for this file.
    message Modes {
        
        // The different 'types' of mode for a file.
        message Values {
            required bool read = 1;
            required bool write = 2;
            required bool execute = 3;
        };
        
        required Values user = 1;
        required Values group = 2;
        required Values other = 3;
    }
    optional Modes modes = 2;
    
    // The fully qualified path of the file system entry.
    required string path = 3;
    
    // Owning user ID
    optional string uid = 10;
    // Owning group ID
    optional string gid = 11;
    
    // UUID of the host which this file is hosted on.
    optional string hid = 12;
    // UUID of this file.
    optional string fid = 13;
    
    // Size of the file, or number of directory entries.
    optional uint32 size = 20;
    
    // Last time this file was accessed.
    optional uint64 atime = 22;
    // Last time this file was modified.
    optional uint64 mtime = 23;
    // Last time the metadata of this file was changed.
    optional uint64 ctime = 24;
}

// A file handle used for representing open files
message FileHandle {
    // The host ID of the machine owning this file handle.
    required string hid = 1;
    // The local file ID given to the process opening this file.
    required int32 fid = 2;
}

